name: ci
on:
  push:
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true
jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22.5"

      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt install -y libc6-dev libgl1-mesa-dev libxcursor-dev libxi-dev libxinerama-dev libxrandr-dev libxxf86vm-dev libasound2-dev pkg-config xvfb
          go mod download

      - name: Run tests
        run: xvfb-run -a go test ./...

  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            GOOS: linux
            GOARCH: amd64
            EXT: ""
          - os: macos-latest
            GOOS: darwin
            GOARCH: amd64
            EXT: ""
          - os: windows-latest
            GOOS: windows
            GOARCH: amd64
            EXT: ".exe"

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22.5"

      - name: Install dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libc6-dev libgl1-mesa-dev libxcursor-dev libxi-dev libxinerama-dev libxrandr-dev libxxf86vm-dev libasound2-dev pkg-config

      - name: Install dependencies
        run: go mod download

      - name: Build
        run: |
          mkdir -p dist
          go build -o dist/invaders${{ matrix.EXT }}

      - name: Zip build artifacts (Ubuntu and macOS)
        if: matrix.os != 'windows-latest'
        run: |
          zip -j dist/invaders-${{ matrix.GOOS }}-${{ matrix.GOARCH }}.zip dist/invaders${{ matrix.EXT }}
        shell: bash

      - name: Zip build artifacts (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          powershell Compress-Archive -Path dist\\invaders${{ matrix.EXT }} -DestinationPath dist\\invaders-${{ matrix.GOOS }}-${{ matrix.GOARCH }}.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: invaders-${{ matrix.GOOS }}-${{ matrix.GOARCH }}
          path: dist/invaders-${{ matrix.GOOS }}-${{ matrix.GOARCH }}.zip

  release:
    # if: startsWith(github.ref, 'refs/tags/')
    needs:
      - build
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: dist

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            invaders-windows-amd64.zip
            invaders-linux-amd64.zip
            invaders-darwin-amd64.zip
          generate_release_notes: true
          draft: true
          fail_on_unmatched_files: true
